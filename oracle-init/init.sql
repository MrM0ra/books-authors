-- Creaci√≥n de tablas simplificadas

CREATE TABLE system.authors (
    author_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL
);

CREATE TABLE system.books (
    book_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(200) NOT NULL,
    author_id NUMBER NOT NULL,
    CONSTRAINT fk_books_authors FOREIGN KEY (author_id) REFERENCES system.authors(author_id) ON DELETE CASCADE
);

-- Procedimientos para system.authors

CREATE OR REPLACE PROCEDURE system.INSERT_AUTHOR(
    p_name IN VARCHAR2,
    p_id OUT NUMBER
) AS
BEGIN
    INSERT INTO system.authors(name) VALUES (p_name) RETURNING author_id INTO p_id;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE system.UPDATE_AUTHOR(
    p_id IN NUMBER,
    p_name IN VARCHAR2
) AS
BEGIN
    UPDATE system.authors SET name = p_name WHERE author_id = p_id;
END;
/

CREATE OR REPLACE PROCEDURE system.DELETE_AUTHOR(
    p_id IN NUMBER
) AS
BEGIN
    DELETE FROM system.authors WHERE author_id = p_id;
END;
/

CREATE OR REPLACE PROCEDURE system.GET_AUTHOR(
    p_id IN NUMBER,
    p_name OUT VARCHAR2
) AS
BEGIN
    SELECT name INTO p_name FROM system.authors WHERE author_id = p_id;
END;
/

CREATE OR REPLACE PROCEDURE system.GET_ALL_AUTHORS(
    p_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_cursor FOR SELECT author_id, name FROM system.authors;
END;
/

-- Procedimientos para system.books

CREATE OR REPLACE PROCEDURE system.INSERT_BOOK(
    p_title IN VARCHAR2,
    p_author_id IN NUMBER,
    p_book_id OUT NUMBER
) AS
BEGIN
    INSERT INTO system.books(title, author_id) VALUES (p_title, p_author_id) RETURNING book_id INTO p_book_id;
END;
/

CREATE OR REPLACE PROCEDURE system.UPDATE_BOOK(
    p_id IN NUMBER,
    p_title IN VARCHAR2,
    p_author_id IN NUMBER
) AS
BEGIN
    UPDATE system.books SET title = p_title, author_id = p_author_id WHERE book_id = p_id;
END;
/

CREATE OR REPLACE PROCEDURE system.DELETE_BOOK(
    p_id IN NUMBER
) AS
BEGIN
    DELETE FROM system.books WHERE book_id = p_id;
END;
/

CREATE OR REPLACE PROCEDURE system.GET_BOOK(
    p_id IN NUMBER,
    p_title OUT VARCHAR2,
    p_author_id OUT NUMBER
) AS
BEGIN
    SELECT title, author_id INTO p_title, p_author_id FROM system.books WHERE book_id = p_id;
END;
/

CREATE OR REPLACE PROCEDURE system.GET_BOOKS_BY_AUTHOR(
    p_author_id IN NUMBER,
    p_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_cursor FOR SELECT book_id, title FROM system.books WHERE author_id = p_author_id;
END;
/

CREATE OR REPLACE PROCEDURE system.GET_ALL_BOOKS(
    p_cursor OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_cursor FOR SELECT book_id, title, author_id FROM system.books;
END;
/
